@*  1.

    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

    Razor code-block is '@ { //code  } '
    Razor code expression is '@ViewBag.Name'
*@

@* 2.

    Since we can add C# to our html view, we can make our view
    'strongly typed view' by using the classes from the model.
*@


@*Link the model to the view*@
@model FutureValueModel
@{
    ViewData["Title"] = "Future Value Calculator";
    Layout = "_Layout";
}

<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title> Future Value Calculator </title>
    </head>
    <body>

        <h1>Future Value Calculator</h1>

        @* Using only a controller, NO model
        <p>Customer: @ViewBag.Name</p>
        <p>ID: @ViewBag.FV</p>
        <p>Age: @ViewBag.Age</p>
        *@

        @*Submitting this form is:
            - a Post request action
            - using the method 'Index'
        *@
        <form asp-action="Index" method="post">

            <div asp-validation-summary="All"></div>

            <div>
                <label asp-for="MonthlyInvestment">Monthly Investment</label>
                <input asp-for="MonthlyInvestment" />
            </div>
            <div>
                <label asp-for="YearlyInterestRate">Yearly Interest Rate</label>
                <input asp-for="YearlyInterestRate" />
            </div>
            <div>
                <label asp-for="Years">Years</label>
                <input asp-for="Years" />
            </div>

            <div>
                <label>Future Value:</label>
                <input value="@ViewBag.FV.ToString("C2")" readonly />
            </div>

            <button type="submit">Calculate</button>
            <a asp-action="Index">Clear</a>
        </form>
    </body>
</html>
